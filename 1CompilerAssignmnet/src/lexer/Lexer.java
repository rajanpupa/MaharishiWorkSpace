/* This file was generated by SableCC (http://www.sablecc.org/). */

package lexer;

import java.io.*;
import node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.NORMAL;

    private PushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") PushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 58:
                        {
                            @SuppressWarnings("hiding") Token token = new58(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 59:
                        {
                            @SuppressWarnings("hiding") Token token = new59(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSlineComment(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMlineComment(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhiteSpace(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStringLit(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCharLit(text, line, pos); }
    Token new5(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIntLit(text, line, pos); }
    Token new6(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFloatLit(text, line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKplusOperator(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKminusOperator(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKmultiplicationOperator(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDivisionOperator(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKlessthen(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKlessthenOrEqual(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKgreaterthen(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKgreaterthenOrEqual(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKcomparisonOperator(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKand(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKor(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKnotOperator(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKconditionalColonOperator(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKsemicolon(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKcomma(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKleftBrace(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKrightBrace(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKleftCurly(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKrightCurly(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKleftSquare(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKrightSquare(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKnotEqualsComparison(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKequals(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKarrowOperator(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKbitwiseXorOperator(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKmoduloDisisonOperator(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKdotOperator(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKbitwiseAndOperator(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKbitwiseOrOperator(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKclass(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKbool(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKbreak(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKchar(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKcontinue(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKdo(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKelse(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKfalse(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKfloat(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKif(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKint(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKnull(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKnew(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKprivate(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKprotected(line, pos); }
    Token new51(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKpublic(line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKreturn(line, pos); }
    Token new53(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKstatic(line, pos); }
    Token new54(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKstring(line, pos); }
    Token new55(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKthis(line, pos); }
    Token new56(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKtrue(line, pos); }
    Token new57(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKwhile(line, pos); }
    Token new58(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKvoid(line, pos); }
    Token new59(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKidentifier(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // NORMAL
            {{9, 9, 1}, {10, 10, 2}, {12, 12, 3}, {13, 13, 4}, {32, 32, 5}, {33, 33, 6}, {34, 34, 7}, {37, 37, 8}, {38, 38, 9}, {39, 39, 10}, {40, 40, 11}, {41, 41, 12}, {42, 42, 13}, {43, 43, 14}, {44, 44, 15}, {45, 45, 16}, {46, 46, 17}, {47, 47, 18}, {48, 57, 19}, {58, 58, 20}, {59, 59, 21}, {60, 60, 22}, {61, 61, 23}, {62, 62, 24}, {65, 90, 25}, {91, 91, 26}, {93, 93, 27}, {94, 94, 28}, {95, 95, 25}, {97, 97, 25}, {98, 98, 29}, {99, 99, 30}, {100, 100, 31}, {101, 101, 32}, {102, 102, 33}, {103, 104, 25}, {105, 105, 34}, {106, 109, 25}, {110, 110, 35}, {111, 111, 25}, {112, 112, 36}, {113, 113, 25}, {114, 114, 37}, {115, 115, 38}, {116, 116, 39}, {117, 117, 25}, {118, 118, 40}, {119, 119, 41}, {120, 122, 25}, {123, 123, 42}, {124, 124, 43}, {125, 125, 44}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 45}, {12, 32, -2}, },
            {{9, 32, -2}, },
            {{61, 61, 46}, },
            {{32, 32, 47}, {34, 34, 48}, {39, 39, 49}, {48, 57, 47}, {65, 90, 47}, {92, 92, 50}, {97, 122, 47}, },
            {},
            {{38, 38, 51}, },
            {{32, 91, 52}, {92, 92, 53}, {93, 126, 52}, },
            {},
            {},
            {},
            {},
            {},
            {{62, 62, 54}, },
            {{48, 57, 55}, },
            {{42, 42, 56}, {47, 47, 57}, },
            {{46, 46, 58}, {48, 57, 19}, },
            {},
            {},
            {{61, 61, 59}, },
            {{61, 61, 60}, },
            {{61, 61, 61}, },
            {{48, 57, 62}, {65, 90, 63}, {95, 95, 63}, {97, 122, 63}, },
            {},
            {},
            {},
            {{48, 95, -27}, {97, 110, 63}, {111, 111, 64}, {112, 113, 63}, {114, 114, 65}, {115, 122, 63}, },
            {{48, 95, -27}, {97, 103, 63}, {104, 104, 66}, {105, 107, 63}, {108, 108, 67}, {109, 110, 63}, {111, 111, 68}, {112, 122, 63}, },
            {{48, 110, -31}, {111, 111, 69}, {112, 122, 63}, },
            {{48, 95, -27}, {97, 107, 63}, {108, 108, 70}, {109, 122, 63}, },
            {{48, 95, -27}, {97, 97, 71}, {98, 107, 63}, {108, 108, 72}, {109, 122, 63}, },
            {{48, 95, -27}, {97, 101, 63}, {102, 102, 73}, {103, 109, 63}, {110, 110, 74}, {111, 122, 63}, },
            {{48, 95, -27}, {97, 100, 63}, {101, 101, 75}, {102, 116, 63}, {117, 117, 76}, {118, 122, 63}, },
            {{48, 95, -27}, {97, 113, 63}, {114, 114, 77}, {115, 116, 63}, {117, 117, 78}, {118, 122, 63}, },
            {{48, 100, -37}, {101, 101, 79}, {102, 122, 63}, },
            {{48, 95, -27}, {97, 115, 63}, {116, 116, 80}, {117, 122, 63}, },
            {{48, 103, -32}, {104, 104, 81}, {105, 113, 63}, {114, 114, 82}, {115, 122, 63}, },
            {{48, 110, -31}, {111, 111, 83}, {112, 122, 63}, },
            {{48, 103, -32}, {104, 104, 84}, {105, 122, 63}, },
            {},
            {{124, 124, 85}, },
            {},
            {{9, 32, -2}, },
            {},
            {{32, 122, -9}, },
            {},
            {{32, 122, -9}, },
            {{34, 34, 86}, {39, 39, 87}, {92, 92, 88}, {98, 98, 89}, {102, 102, 90}, {110, 110, 91}, {114, 114, 92}, {116, 116, 93}, },
            {},
            {{39, 39, 94}, },
            {{34, 34, 95}, {39, 39, 96}, {92, 92, 97}, {98, 98, 98}, {102, 102, 99}, {110, 110, 100}, {114, 114, 101}, {116, 116, 102}, },
            {},
            {{48, 57, 55}, {69, 69, 103}, {101, 101, 103}, },
            {{0, 41, 104}, {42, 42, 105}, {43, 65535, 104}, },
            {{10, 10, 106}, {13, 13, 107}, {32, 126, 108}, },
            {{48, 57, 109}, {69, 101, -57}, },
            {},
            {},
            {},
            {{48, 122, -27}, },
            {{48, 122, -27}, },
            {{48, 110, -31}, {111, 111, 110}, {112, 122, 63}, },
            {{48, 100, -37}, {101, 101, 111}, {102, 122, 63}, },
            {{48, 95, -27}, {97, 97, 112}, {98, 122, 63}, },
            {{48, 95, -27}, {97, 97, 113}, {98, 122, 63}, },
            {{48, 95, -27}, {97, 109, 63}, {110, 110, 114}, {111, 122, 63}, },
            {{48, 122, -27}, },
            {{48, 95, -27}, {97, 114, 63}, {115, 115, 115}, {116, 122, 63}, },
            {{48, 107, -34}, {108, 108, 116}, {109, 122, 63}, },
            {{48, 110, -31}, {111, 111, 117}, {112, 122, 63}, },
            {{48, 122, -27}, },
            {{48, 115, -40}, {116, 116, 118}, {117, 122, 63}, },
            {{48, 95, -27}, {97, 118, 63}, {119, 119, 119}, {120, 122, 63}, },
            {{48, 107, -34}, {108, 108, 120}, {109, 122, 63}, },
            {{48, 95, -27}, {97, 104, 63}, {105, 105, 121}, {106, 110, 63}, {111, 111, 122}, {112, 122, 63}, },
            {{48, 95, -27}, {97, 97, 63}, {98, 98, 123}, {99, 122, 63}, },
            {{48, 115, -40}, {116, 116, 124}, {117, 122, 63}, },
            {{48, 95, -27}, {97, 97, 125}, {98, 113, 63}, {114, 114, 126}, {115, 122, 63}, },
            {{48, 104, -79}, {105, 105, 127}, {106, 122, 63}, },
            {{48, 95, -27}, {97, 116, 63}, {117, 117, 128}, {118, 122, 63}, },
            {{48, 104, -79}, {105, 105, 129}, {106, 122, 63}, },
            {{48, 104, -79}, {105, 105, 130}, {106, 122, 63}, },
            {},
            {{32, 122, -9}, },
            {{32, 122, -9}, },
            {{32, 122, -9}, },
            {{32, 122, -9}, },
            {{32, 122, -9}, },
            {{32, 122, -9}, },
            {{32, 122, -9}, },
            {{32, 122, -9}, },
            {},
            {{39, 39, 94}, },
            {{39, 39, 94}, },
            {{39, 39, 94}, },
            {{39, 39, 94}, },
            {{39, 39, 94}, },
            {{39, 39, 94}, },
            {{39, 39, 94}, },
            {{39, 39, 94}, },
            {{43, 43, 131}, {45, 45, 131}, {48, 57, 132}, },
            {{0, 65535, -58}, },
            {{0, 41, 133}, {42, 42, 105}, {43, 46, 133}, {47, 47, 134}, {48, 65535, 133}, },
            {},
            {{10, 10, 135}, },
            {{10, 126, -59}, },
            {{48, 101, -60}, },
            {{48, 107, -34}, {108, 108, 136}, {109, 122, 63}, },
            {{48, 95, -27}, {97, 97, 137}, {98, 122, 63}, },
            {{48, 113, -38}, {114, 114, 138}, {115, 122, 63}, },
            {{48, 114, -72}, {115, 115, 139}, {116, 122, 63}, },
            {{48, 115, -40}, {116, 116, 140}, {117, 122, 63}, },
            {{48, 100, -37}, {101, 101, 141}, {102, 122, 63}, },
            {{48, 114, -72}, {115, 115, 142}, {116, 122, 63}, },
            {{48, 95, -27}, {97, 97, 143}, {98, 122, 63}, },
            {{48, 122, -27}, },
            {{48, 122, -27}, },
            {{48, 107, -34}, {108, 108, 144}, {109, 122, 63}, },
            {{48, 95, -27}, {97, 117, 63}, {118, 118, 145}, {119, 122, 63}, },
            {{48, 115, -40}, {116, 116, 146}, {117, 122, 63}, },
            {{48, 107, -34}, {108, 108, 147}, {109, 122, 63}, },
            {{48, 116, -84}, {117, 117, 148}, {118, 122, 63}, },
            {{48, 115, -40}, {116, 116, 149}, {117, 122, 63}, },
            {{48, 104, -79}, {105, 105, 150}, {106, 122, 63}, },
            {{48, 114, -72}, {115, 115, 151}, {116, 122, 63}, },
            {{48, 100, -37}, {101, 101, 152}, {102, 122, 63}, },
            {{48, 95, -27}, {97, 99, 63}, {100, 100, 153}, {101, 122, 63}, },
            {{48, 107, -34}, {108, 108, 154}, {109, 122, 63}, },
            {{48, 57, 132}, },
            {{48, 57, 132}, {69, 101, -57}, },
            {{0, 41, 155}, {42, 42, 156}, {43, 65535, 155}, },
            {},
            {},
            {{48, 122, -27}, },
            {{48, 95, -27}, {97, 106, 63}, {107, 107, 157}, {108, 122, 63}, },
            {{48, 122, -27}, },
            {{48, 114, -72}, {115, 115, 158}, {116, 122, 63}, },
            {{48, 104, -79}, {105, 105, 159}, {106, 122, 63}, },
            {{48, 122, -27}, },
            {{48, 100, -37}, {101, 101, 160}, {102, 122, 63}, },
            {{48, 115, -40}, {116, 116, 161}, {117, 122, 63}, },
            {{48, 122, -27}, },
            {{48, 95, -27}, {97, 97, 162}, {98, 122, 63}, },
            {{48, 100, -37}, {101, 101, 163}, {102, 122, 63}, },
            {{48, 104, -79}, {105, 105, 164}, {106, 122, 63}, },
            {{48, 113, -38}, {114, 114, 165}, {115, 122, 63}, },
            {{48, 104, -79}, {105, 105, 166}, {106, 122, 63}, },
            {{48, 109, -70}, {110, 110, 167}, {111, 122, 63}, },
            {{48, 122, -27}, },
            {{48, 122, -27}, },
            {{48, 122, -27}, },
            {{48, 100, -37}, {101, 101, 168}, {102, 122, 63}, },
            {{0, 65535, -135}, },
            {{0, 41, 133}, {42, 42, 156}, {43, 65535, -107}, },
            {{48, 122, -27}, },
            {{48, 122, -27}, },
            {{48, 109, -70}, {110, 110, 169}, {111, 122, 63}, },
            {{48, 122, -27}, },
            {{48, 122, -27}, },
            {{48, 115, -40}, {116, 116, 170}, {117, 122, 63}, },
            {{48, 95, -27}, {97, 98, 63}, {99, 99, 171}, {100, 122, 63}, },
            {{48, 98, -165}, {99, 99, 172}, {100, 122, 63}, },
            {{48, 109, -70}, {110, 110, 173}, {111, 122, 63}, },
            {{48, 98, -165}, {99, 99, 174}, {100, 122, 63}, },
            {{48, 95, -27}, {97, 102, 63}, {103, 103, 175}, {104, 122, 63}, },
            {{48, 122, -27}, },
            {{48, 116, -84}, {117, 117, 176}, {118, 122, 63}, },
            {{48, 100, -37}, {101, 101, 177}, {102, 122, 63}, },
            {{48, 115, -40}, {116, 116, 178}, {117, 122, 63}, },
            {{48, 122, -27}, },
            {{48, 122, -27}, },
            {{48, 122, -27}, },
            {{48, 122, -27}, },
            {{48, 100, -37}, {101, 101, 179}, {102, 122, 63}, },
            {{48, 122, -27}, },
            {{48, 100, -37}, {101, 101, 180}, {102, 122, 63}, },
            {{48, 122, -27}, },
            {{48, 99, -131}, {100, 100, 181}, {101, 122, 63}, },
            {{48, 122, -27}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // NORMAL
        {2, 2, 2, 2, 2, 2, 18, -1, 32, 34, -1, 22, 23, 9, 7, 21, 8, 33, 10, 5, 19, 20, 11, 29, 13, 59, 26, 27, 31, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 24, 35, 25, 2, 28, -1, 3, -1, -1, 16, -1, -1, 30, 6, -1, -1, 6, 12, 15, 14, 59, 59, 59, 59, 59, 59, 59, 41, 59, 59, 59, 45, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 17, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 6, 59, 59, 59, 59, 59, 59, 59, 59, 46, 48, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, -1, 6, -1, 1, 0, 37, 59, 39, 59, 59, 42, 59, 59, 47, 59, 59, 59, 59, 59, 59, 55, 56, 58, 59, -1, -1, 38, 36, 59, 43, 44, 59, 59, 59, 59, 59, 59, 57, 59, 59, 59, 51, 52, 53, 54, 59, 49, 59, 40, 59, 50, },

    };*/

    public static class State
    {
        public final static State NORMAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
